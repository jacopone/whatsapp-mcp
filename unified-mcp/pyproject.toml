[project]
name = "whatsapp-unified-mcp"
version = "1.0.0"
description = "Unified WhatsApp MCP Server combining Go and Baileys bridges"
requires-python = ">=3.12"
dependencies = [
    "fastmcp>=0.2.0",
    "requests>=2.31.0",
    "typing-extensions>=4.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=6.0.0",
    "pytest-timeout>=2.2.0",
    "pytest-docker>=3.1.0",
    "pytest-rerunfailures>=12.0",
    "responses>=0.25.0",
    "psutil>=5.9.0",
    "black>=24.0.0",
    "ruff>=0.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --strict-markers --timeout=10 --reruns 3 --reruns-delay 1"

[tool.coverage.run]
branch = true
source = ["."]
omit = ["*/tests/*", "*/test_*.py"]
concurrency = ["thread"]

[tool.coverage.report]
precision = 2
show_missing = true
fail_under = 70
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
